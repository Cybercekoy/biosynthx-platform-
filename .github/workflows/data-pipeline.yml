name: Nightly Data Pipeline

on:
  schedule:
    # всеки ден в 02:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

# нужно е за изтегляне на артефакти/логове при нужда
permissions:
  actions: write
  contents: read

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Python 3.11 (без requirements auto-install)
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # 3) Системни зависимости (pandoc за PDF)
      - name: Install system deps (pandoc for whitepaper)
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      # 4) Python зависимости (инсталираме директно)
      - name: Install Python deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy boto3 prefect requests reportlab pyarrow

      # 5) Бърз дебъг на средата (полезно при проблеми)
      - name: Quick debug (env + tree)
        shell: bash
        run: |
          python -V
          which python
          pip -V
          echo "----- env (redacted) -----"
          env | sed 's/=.*/=<redacted>/' | sort | head -n 50
          echo "----- repo tree -----"
          ls -la
          echo "----- flows dir -----"
          ls -la flows || true
          echo "----- locate main_flow_v2.py -----"
          find . -maxdepth 3 -type f -name "main_flow_v2.py" -print || true

      # 6) Стартираме самия пайплайн
      - name: Run pipeline v2
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -euo pipefail
          test -f flows/main_flow_v2.py || { echo "flows/main_flow_v2.py not found"; exit 1; }
          python flows/main_flow_v2.py

      # 7) Пост-диагностика (без нестандартни shell опции)
      - name: Post-run diagnostics
        shell: bash
        if: always()
        run: |
          echo "--- disk usage ---"
          df -h
          echo "--- workspace listing ---"
          ls -la
